Requirements Specification Document
Introduction:
The goal of the WW1 Bradford Database project is to conserve and grow the historical records of Bradford residents and those in the surrounding areas who served in the military or in occupations related to the conflict during World conflict I. Founded in 1832, the Bradford Mechanics Institute Library has long served as a hub for adult education, and this project builds on previous efforts by the WW1 Bradford Group, which was founded in the 1980s. Their goal is to compile and record the names of locals who served in the Great War and to offer tools for additional study into their experiences

Team Expertise:
Our team are familiar with the following languages: Python, HTML and CSS – this expertise mainly comes from our place at University of Bradford and previous education. We have used HTML to make a website and paired with CSS we designed it to our desire. Our team also have great communication with one another meaning we will be able to assign work individually effectively – and combined with the punctuality we can function efficiently.

Rationale of Topic Choice:

Literature Review:
The preservation of World War One data is the focus of several initiatives, including Findmypast, which offers accessible military information, and the Commonwealth War Graves Commission (CWGC). While these platforms supply a lot of data, they are broad in scope and often require paid access, unlike the proposed Bradford WW1 application, which will focus on local data and provide open access.
Relational databases like MySQL and PostgreSQL are used by many historical archives, like The Digital Public Library of America (DPLA), to manage their records. Because of its ease of use and capacity to manage the anticipated volume of data, SQLite was selected for this project. The organised data storage of military records, memorials, and associated historical data will be supported by this DBMS.
Flask was chosen for the web application because it is scalable and lightweight. Database-driven apps can be developed quickly with Flask. Platforms like as Europeana provide useful insights on designing user-friendly, accessible archive interfaces. For both public and admin users, features like search, filtering, and navigation will be essential to guaranteeing a user-friendly experience.

Functional and Non-Functional Requirements:
Functional Requirements
User Authentication: Users will be able to log in as either guests (read-only access) or admins (full access to create, edit, and delete entries) once the system has implemented user authentication. Both admin and guest logins will be protected by passwords.
Database: Ability to search, add, edit, and delete records.
User Interface: There will be clear navigation choices to access each database section, and the interface will be easy to use. Navigation through the database and search results will be made easier with the usage of buttons like Next, previous and close.
Search Functionality A variety of fields, including surname, regiment, monument location, and more, will allow users to search the database. The search results will enhance performance and usability.

Non-Functional Requirements
Usability: Users with no technical skills will be able to use the system with ease thanks to the application's user-friendly layout.  There will be user guides to help users navigate the application.
Performance: Indexing and paging strategies will be used to optimise the system for quick data retrieval, particularly for search queries.  Large datasets will be handled by effective algorithms, which will also increase system responsiveness.
Safety: Passwords belonging to users will be safely kept by encryption.  Only admin users will be able to access sensitive information.  Restrictions on access and modification will be applied according to the responsibilities of the users (admin or guest).

Data Description:
The database will contain the following tables:
Bradford and Surrounding Townships

· Surname, Forename, Address, Town, Regiment, Service Number, Enlistment Date, Discharge Date, Cemetery.

Bradford Memorial

· Surname, Forename, Memorial Title, Memorial Location, Memorial Info.

Those buried in Bradford

· Surname, Forename, Date of Death, Regiment, Cemetery

Newspaper References

· Surname, Forename, Newspaper Name, Date, Page/Column

Biographies

· Surname, Forename, Regiment, Biography attachment

Interface Design:
Login Screen
Login area: Username and password input areas are located on the login screen. Buttons: Login button for authentication. Functionality: Both guest users and administrators can log in using their unique login information.

Main Menu
Options: Links to different parts (Townships, Newspapers, Biographies, Memorials, and Burials) via navigation page. Buttons: a button for users to log out.

Search and Navigation
A search box will allow users to search records based on various fields (surname, regiment, etc). Users will have an option to clear the search and return to the main records.

Data Presentation
Display: Data will be displayed in tables, with clear formatting for easy reading.
Record Viewing: Users can view detailed information for each individual record and navigate between different records in the table.

Work Plan:
Gantt chart

LSEPI and Risk Assessment:
Legal issues
The project must make sure that data protection laws, such as the General Data Protection Regulation (GDPR), are followed, especially when it comes to personal data, including names and addresses. To ensure that data is retained and shared legally, historical records should be handled with consideration for the privacy rights of any living descendants.

Social issues
By making historical records more easily accessible, the project offers the local community a valuable educational resource. It might also promote social interaction with local history and increase awareness of Bradford's involvement in World War One. The key to the data's social value is making sure it is accessible and available.

Ethical issues
Data integrity and accuracy must be the project's top ethical priorities. To prevent misrepresentation, all records should be checked and derived from reliable historical sources. The initiative should also continue to display data transparently, making sure that no important historical facts are left out or consumers are misled.

Professional issues
Professionally, the project must follow managing databases and web development best practices, which include guaranteeing data is safe and reliable. To ensure usability and performance for every user, testing should be done on a regular basis. To ensure future upgrades and maintenance, the team should adhere to ethical coding methods and maintain good documentation standards.

Peer Review:
Farhan - 9/10
- Responsible for functional and non-functional requirements for the report. For the code farhan did the main function and the login page. Farhan was also paired with everyone to ensure the code was done.  
Daniyal - 7/10
- Responsible for team expertise and peer review for the report. For the code Daniyal did the front eand back end of newspaper page.
Shahzaib - 5/10
- Responsible for data description and Gantt Chart on the report. For the code he did the back end of the biography. Shahzaib missed the third meeting.
Hamza - 6/10 
- Responsible for the introduction and topic choice on the report. For the code Hamza did the front end of the biography.
Asnain - 8/10
- Responsible for the interface design and the organisation of the Github - he also did the LSEPI. For the code Asnain did the memorial page.
Habib - 5/10
- Responsible for the project brief and on the report. Habib wasn't able to attend any meetings - he has informed savas regarding this issue.
Adnan - 7/10 
- Responsible for all team minutes and meetings and the literature review. For the code he did the switchboard. 

As some members were not as confident in the code they were paired up - for example, Hamza and Shahzaib both did the biography.
